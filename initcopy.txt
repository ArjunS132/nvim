" sets
syntax on
set guicursor=
set backspace=indent,eol,start
set noerrorbells
set tabstop=4 softtabstop=4 shiftwidth=4 expandtab smartindent
set relativenumber number
set hidden
set nowrap
set ignorecase smartcase incsearch
set noswapfile
set nobackup
set undodir =~/.vim/undodir
set undofile
set scrolloff=8
set updatetime=50
set termguicolors
set nohlsearch
set completeopt=menu,menuone,noselect

" 80 character limit column
set colorcolumn=80
set signcolumn=yes
highlight Colorcolumn guibg=lightgrey

" set up plugins 
call plug#begin('~/.config/nvim/plugged')

Plug 'RishabhRD/popfix'
Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
Plug 'ThePrimeagen/vim-be-good'
Plug 'gruvbox-community/gruvbox'
Plug 'jremmen/vim-ripgrep'
Plug 'tpope/vim-fuitive'
Plug 'vim-utils/vim-man'
Plug 'mbbill/undotree'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'thoughtbot/vim-rspec'
Plug 'lifepillar/pgsql.vim'
Plug 'neovim/nvim-lspconfig'
Plug 'nvim-lua/completion-nvim'
Plug 'mfussenegger/nvim-jdtls'
Plug 'hrsh7th/nvim-compe'
Plug 'RishabhRD/nvim-lsputils'

call plug#end()

" set colorscheme and background
colorscheme gruvbox
highlight Normal guibg=none

" lets
let mapleader = " "
let g:netrw_browse_split=2
let g:netrw_banner = 0
let g:netrw_winsize = 25
let $NVIM_TUI_ENABLE_TRUE_COLOR=1
let g:completion_matching_strategy_list=['exact', 'substring', 'fuzzy']

" setting up treesitter highlighting
lua <<EOF
require'nvim-treesitter.configs'.setup {
  highlight = {
    enable = true,
  },
}
EOF

" lsp config
lua << EOF 
require 'lspconfig'.clangd.setup { on_attach=require'completion'.on_attach }
require'lspconfig'.solargraph.setup{on_attach=require'completion'.on_attach }
EOF 

" compe setup
lua require'completion_config'

" java server
 augroup lsp
   au!
   au FileType java lua require'jdtls_config'.setup()
   au FileType ruby lua require'solargraph_config'.setup()
   au FileType cpp lua require'clangd_config'.setup()
 augroup end

" Fzf remap
nmap <leader>ff :Files $HOME<CR>
nmap <leader>ps :Files<CR>      

 "undo tree
nnoremap <leader>u :UndotreeShow<CR>" utility remaps

" RSpec.vim mappings
map <Leader>t :call RunCurrentSpecFile()<CR>
map <Leader>s :call RunNearestSpec()<CR>
map <Leader>a :call RunAllSpecs()<CR>

inoremap <silent><expr> <C-Space> compe#complete()
inoremap <silent><expr> <CR>      compe#confirm('<CR>')
inoremap <silent><expr> <C-e>     compe#close('<C-e>')
inoremap <silent><expr> <C-f>     compe#scroll({ 'delta': +4 })
inoremap <silent><expr> <C-d>     compe#scroll({ 'delta': -4 })

" utility remaps
imap jj <esc>
nnoremap H ^
nnoremap L $
nnoremap <c-i> <C-^>
nnoremap <leader>j :wincmd j<CR>
nnoremap <leader>k :wincmd k<CR>
nnoremap <leader>l :wincmd l<CR>
nnoremap <leader>h :wincmd h<CR>
nnoremap <silent> <Leader>= :vertical resize +5<CR>
nnoremap <silent> <Leader>- :vertical resize -5<CR>
nnoremap <c-j> :bp<CR>
nnoremap <c-k> :bn<CR>
" remap for opening file's directory in a split and for opening a terminal 
nnoremap <leader>pv :wincmd v<bar> :Ex <bar> :vertical resize 30<CR>
nnoremap <leader>fg :sp<bar>term<cr><c-w>J:resize10<cr>

" visual remap for printing
vnoremap <leader>p "_dP<CR>

" terminal remap
tnoremap <leader>jj <C-\><C-n>

